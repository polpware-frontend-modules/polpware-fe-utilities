{"version":3,"sources":["ng://@polpware/fe-utilities/lib/src/tools/url.ts","ng://@polpware/fe-utilities/lib/src/typing/type-checker.ts","ng://@polpware/fe-utilities/lib/src/tools/date.ts","ng://@polpware/fe-utilities/lib/src/tools/hash.ts","ng://@polpware/fe-utilities/lib/src/typing/type-cast.ts","ng://@polpware/fe-utilities/lib/src/promise/promise-like.ts","ng://@polpware/fe-utilities/lib/src/tools/str.ts","ng://@polpware/fe-utilities/lib/src/tools/set.ts","ng://@polpware/fe-utilities/lib/src/tools/math.ts","ng://@polpware/fe-utilities/lib/src/promise/monadic-operations.ts","ng://@polpware/fe-utilities/lib/src/tools/arr.ts","ng://@polpware/fe-utilities/lib/src/promise/inter-op.ts"],"names":["urlEncodePair","key","value","str","Array","forEach","item","push","encodeURIComponent","getParamByName","name","url","replace","results","RegExp","exec","decodeURIComponent","isBoolean","x","isNumber","isString","isDate","Object","prototype","toString","call","isSymbol","isNull","isUndefined","undefined","isArray","isObject","isFunction","IntervalEnum","MonthEnum","DayOfWeekEnum","tyBool","val","pred","tyNull","tyUndefined","tyNumber","tyString","Date","now","tyDate","ɵ0","tySymbol","tyObject","ɵ1","tyArray","ɵ2","tyFunction","ɵ3","preDefinedTypes","ok","ty","hashCode","hash","typeChecker.ok","typeChecker.tyBool","typeChecker.tyNumber","length","i","len","charCodeAt","hashPrimitiveMember","configuration","code","convertToUtc","dateInLocal","timeInLocal","timezone","workTime","getFullYear","getMonth","getDate","getHours","getMinutes","timeWrapper","moment","subtract","UTC","year","month","date","hour","minute","second","getTimezoneOffset","n","Math","floor","safeParseFloat","typeChecker.tyString","parseFloat","safeParseBool","toLowerCase","bind","fn","thisArg","apply","arguments","doResolve","onFulfilled","onRejected","done","reason","ex","handle","deferred","me","this","_state","setTimeout","cb","ret","_value","e","reject","resolve","_deferreds","finale","newValue","TypeError","then","DummyPromise","Handler","all","arrayArg","args","slice","remaining","res","constructor","race","values","always","fail","promise","progress","data","Error","toISOString","typeChecker.isNull","typeChecker.isUndefined","isNaN","firstSet","secondSet","predicate","filter","some","y","text","enumMember","parseInt","window","location","href","min","max","random","prop","d","getTime","c","r","january","july","typeChecker.tyArray","typeChecker.isFunction","restArgs","guard","o","hasOwnProperty","src","readerPromise","settings","validator","adaptor","format","params","s","state","p","join"],"mappings":"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","sourcesContent":["/**\r\n * Encodes a key-value pair, where a value can be an array.\r\n */\r\nexport function urlEncodePair(key: string, value: any, str: Array<string>): void {\r\n    if (value instanceof Array) {\r\n        value.forEach((item) => {\r\n            str.push(encodeURIComponent(key) + '[]=' + encodeURIComponent(item));\r\n        });\r\n    } else {\r\n        str.push(encodeURIComponent(key) + '=' + encodeURIComponent(value));\r\n    }\r\n}\r\n\r\n/**\r\n * Encodes an object in www form.\r\n */\r\nexport function urlEncode(data: Object): string {\r\n    const str: Array<string> = [];\r\n    for (let p in data) {\r\n        if (data.hasOwnProperty(p)) {\r\n            urlEncodePair(p, data[p], str);\r\n        }\r\n    }\r\n    return str.join('&').replace(/%20/g, '+');\r\n}\r\n\r\nexport function getParamByName(name: string, url: string): string | null {\r\n    name = name.replace(/[\\[\\]]/g, '\\\\$&');\r\n    const regex = new RegExp('[?#&]' + name + '(=([^&#]*)|&|#|$)');\r\n    const results = regex.exec(url);\r\n    if (!results) {\r\n        return null;\r\n    }\r\n    if (!results[2]) {\r\n        return '';\r\n    }\r\n    return decodeURIComponent(results[2].replace(/\\+/g, ' '));\r\n}\r\n\r\nexport function getQueryParamByName(name: string, url?: string): string | null {\r\n    if (!url) {\r\n        url = window.location.href;\r\n    }\r\n    return getParamByName(name, url);\r\n}\r\n\r\nexport function getHashParamByName(name: string, url?: string): string | null {\r\n    if (!url) {\r\n        url = window.location.hash;\r\n    }\r\n    return getParamByName(name, url);\r\n}\r\n","/*\r\nBasicTypes := \r\n    boolean \r\n  | number \r\n  | string \r\n  | date\r\n  | symbol\r\n  | null\r\n  | undefined\r\n  | array \r\n  | object\r\n  | function\r\n*/\r\n\r\n\r\nexport function isBoolean(x: any): x is boolean {\r\n    return typeof x === 'boolean';\r\n}\r\n\r\nexport function isNumber(x: any): x is number {\r\n    return typeof x === 'number';\r\n}\r\n\r\nexport function isString(x: any): x is string {\r\n    return typeof x === 'string';\r\n}\r\n\r\nexport function isDate(x: any): x is Object {\r\n    return Object.prototype.toString.call(x) === '[object Date]';\r\n}\r\n\r\nexport function isSymbol(x: any): x is symbol {\r\n    return typeof x === 'symbol';\r\n}\r\n\r\nexport function isNull(x: any): x is null {\r\n    return x === null;\r\n}\r\n\r\nexport function isUndefined(x: any): x is undefined {\r\n    return x === undefined;\r\n}\r\n\r\nexport function isArray(x: any): x is Array<any> {\r\n    return x instanceof Array;\r\n}\r\n\r\nexport function isObject(x: any): x is Object {\r\n    return typeof x === 'object';\r\n}\r\n\r\nexport function isFunction(x: any): x is Function {\r\n    return typeof x === 'function';\r\n}\r\n\r\nexport interface ITypeDef {\r\n    name: string,\r\n    val: any,\r\n    pred: (any) => boolean\r\n};\r\n\r\nexport const tyBool: ITypeDef = { name: 'Boolean', val: false, pred: isBoolean };\r\nexport const tyNull: ITypeDef = { name: 'Null', val: null, pred: isNull };\r\nexport const tyUndefined: ITypeDef = { name: 'Undefined', val: undefined, pred: isUndefined };\r\nexport const tyNumber: ITypeDef = { name: 'Number', val: 0, pred: isNumber };\r\nexport const tyString: ITypeDef = { name: 'String', val: '', pred: isString };\r\nexport const tyDate: ITypeDef = { name: 'Object', val: function() { return Date.now(); }, pred: isDate };\r\nexport const tySymbol: ITypeDef = { name: 'Symbol', val: null, pred: isSymbol };\r\nexport const tyObject: ITypeDef = { name: 'Object', val: function() { return {}; }, pred: isObject };\r\nexport const tyArray: ITypeDef = { name: 'Array', val: function() { return []; }, pred: isArray };\r\nexport const tyFunction: ITypeDef = { name: 'Function', val: function() { }, pred: isFunction };\r\n\r\n/**\r\n *  Predefined types and their properties.\r\n */\r\nconst preDefinedTypes: { [key: string]: ITypeDef } = {\r\n    tyBool: tyBool,\r\n    tyNull: tyNull,\r\n    tyUndefined: tyUndefined,\r\n    tyNumber: tyNumber,\r\n    tyString: tyString,\r\n    tyDate: tyDate,\r\n    tySymbol: tySymbol,\r\n    tyObject: tyObject,\r\n    tyArray: tyArray,\r\n    tyFunction: tyFunction\r\n};\r\n/**\r\n * Returns the default value for a given type.\r\n */\r\nexport function defaultValue(ty: ITypeDef): any {\r\n    let val = ty.val;\r\n    if (ty !== tyFunction && typeof val === 'function') {\r\n        val = val();\r\n    }\r\n    return val;\r\n}\r\n\r\n/**\r\n * Type checks if a given value is type of the given ty\r\n */\r\nexport function ok(value: any, ty: ITypeDef): boolean {\r\n    return ty.pred(value);\r\n}\r\n\r\n/**\r\n * Returns the type for the given value.\r\n */\r\nexport function getType(value: any): ITypeDef {\r\n    for (let prop in preDefinedTypes) {\r\n        if (ok(value, preDefinedTypes[prop])) {\r\n            return preDefinedTypes[prop];\r\n        }\r\n    }\r\n    return null;\r\n}\r\n\r\nexport function assert(value: any, ty: ITypeDef): void {\r\n    if (ok(value, ty)) {\r\n        return;\r\n    }\r\n    throw new Error('type check error: exptected type is ' +\r\n        ty + ' but given type is ' + typeof value);\r\n}\r\n","import * as moment from 'moment';\n\n/**\n * Converts the given date and time into a UTC time. \n * If the given time zone is null or undefined, this \n * method will not use the local time zone.\n * @param dateInLocal Date in local time\n * @param timeInLocal Time in local time\n * @param timezone Optional time zone\n */\nexport function convertToUtc(dateInLocal: Date, timeInLocal: Date, timezone?: number) {\n    // Construct a new time \n    const workTime = new Date(dateInLocal.getFullYear(),\n        dateInLocal.getMonth(),\n        dateInLocal.getDate(),\n        timeInLocal.getHours(),\n        timeInLocal.getMinutes());\n    const timeWrapper = moment(workTime);\n    // The above time should be interpreted in the given timezone\n    if (timezone) {\n        // Utc time\n        timeWrapper.subtract(timezone, 'hours');\n    }\n\n    // Convert to UTC time\n    let timeInUtc = new Date(Date.UTC(timeWrapper.year(),\n        timeWrapper.month(),\n        timeWrapper.date(),\n        timeWrapper.hour(),\n        timeWrapper.minute(),\n        timeWrapper.second()));\n\n    return timeInUtc;\n}\n\n/**\n Get the timezone offset between the local time and UTC.\n */\nexport function getTimezoneOffset() {\n    const d = new Date();\n    const n = d.getTimezoneOffset();\n    return - Math.floor(n / 60);\n}\n\n/**\n * A set of commonly used interval.\n */\nexport enum IntervalEnum {\n    Day = 10,\n    Week = 50,\n    Month = 100,\n    Year = 500,\n    Custom = 1000\n}\n\n/**\n * Returns the UTC time this moment.\n * This method uses the current time zone.\n */\nexport function getUtcNow(): Date {\n    const now = new Date();\n    const offset = getTimezoneOffset();\n    return convertToUtc(now, now, offset);\n}\n\nexport function hasDST(date = new Date()) {\n    const january = new Date(date.getFullYear(), 0, 1).getTimezoneOffset();\n    const july = new Date(date.getFullYear(), 6, 1).getTimezoneOffset();\n    return Math.max(january, july) !== date.getTimezoneOffset();\n}\n\n/**\n * Converts a local time to Utc string.\n * @param date\n */\nexport function convertToUtcString(date: Date) {\n    return date.toISOString();\n}\n\nexport enum MonthEnum {\n    January = 1,\n    February,\n    March,\n    April,\n    May,\n    June,\n    July,\n    August,\n    September,\n    October,\n    November,\n    December\n}\n\nexport function getMonthsOfYear() {\n    const ret = [];\n    for (var enumMember in MonthEnum) {\n        var isValueProperty = parseInt(enumMember, 10) >= 0\n        if (isValueProperty) {\n            ret.push({\n                value: enumMember,\n                text: 'polpCronJob.' + MonthEnum[enumMember]\n            });\n        }\n    }\n    return ret;\n}\n\n\nexport enum DayOfWeekEnum {\n    Sunday = 0,\n    Monday,\n    Tuesday,\n    Wednesday,\n    Thursday,\n    Friday,\n    Saturday\n}\n\n\nexport function getDaysOfWeek() {\n    const ret = [];\n    for (var enumMember in DayOfWeekEnum) {\n        var isValueProperty = parseInt(enumMember, 10) >= 0\n        if (isValueProperty) {\n            ret.push({\n                value: enumMember,\n                text: 'polpCronJob.' + DayOfWeekEnum[enumMember]\n            });\n        }\n    }\n    return ret;\n}\n\nexport function getDaysOfMonth() {\n    const ret = [];\n    for (let i = 1; i < 32; i++) {\n        ret.push({\n            value: i,\n            text: i.toString()\n        });\n    }\n    return ret;\n}\n","/**\n * @fileOverview\n * Provides utilities for computing hash values\n */\n\nimport * as typeChecker from '../typing/type-checker';\n\n/**\n * Computes the hash code for a given value.\n * This method takes into account the type of the given\n * value when generating its hash code.\n */\nexport function hashCode(value: any): number {\n    let hash = 0;\n    if (typeChecker.ok(value, typeChecker.tyBool)) {\n        value = value ? 1 : 0;\n    } else if (typeChecker.ok(value, typeChecker.tyNumber)) {\n        if (value === 0) {\n            return 0;\n        }\n    }\n\n    if (!value) {\n        return 0;\n    }\n\n    value = value.toString();\n    if (value.length === 0) {\n        return hash;\n    }\n    /*jslint plusplus: true */\n    for (let i = 0, len = value.length; i < len; i++) {\n        const chr = value.charCodeAt(i);\n        hash = ((hash << 5) - hash) + chr;\n        hash |= 0; // Convert to 32bit integer\n    }\n    return hash;\n}\n\n/**\n * Computes the hash code for a member of an object.\n */\nfunction hashPrimitiveMember(name: string, value: any, configuration: { [key: string]: number }) {\n    const code = hashCode(value);\n    if (configuration) {\n        const bits = configuration[name];\n        if (bits) {\n            return code << configuration[name];\n        }\n    }\n    return code;\n}\n\n/**\n * Computes the hash code for a member of an object, based on\n * the given member member, the value to be hashed, and the configuration\n * about how each member contributes to the enire hash code of the\n * object.\n */\nexport function hashMember(name: string, value: any, configuration: { [key: string]: number }) {\n    if (typeChecker.ok(value, typeChecker.tyArray)) {\n        let code = 0;\n        /*jslint plusplus: true */\n        for (let i = 0; i < value.length; i++) {\n            code = code + hashPrimitiveMember(name, value[i], configuration);\n        }\n        return code;\n    }\n    return hashPrimitiveMember(name, value, configuration);\n}\n","import * as typeChecker from './type-checker';\r\n\r\nexport function safeParseString(value: any): string {\r\n    if (!value) {\r\n        return '';\r\n    }\r\n\r\n    return value.toString();\r\n}\r\n\r\n/**\r\n * Parses a given value into an integer.\r\n */\r\nexport function safeParseInt(value: any): number {\r\n    if (!value) {\r\n        return 0;\r\n    }\r\n    if (typeChecker.ok(value, typeChecker.tyString)) {\r\n        return parseInt(value, 10);\r\n    }\r\n    if (typeChecker.ok(value, typeChecker.tyNumber)) {\r\n        return value;\r\n    }\r\n    return 0;\r\n}\r\n\r\n/**\r\n * Parses a given value into a float number.\r\n */\r\nexport function safeParseFloat(value: any): number {\r\n    if (!value) {\r\n        return 0.00;\r\n    }\r\n    if (typeChecker.ok(value, typeChecker.tyString)) {\r\n        return parseFloat(value);\r\n    }\r\n    if (typeChecker.ok(value, typeChecker.tyNumber)) {\r\n        return value;\r\n    }\r\n    return 0.00;\r\n}\r\n\r\n/**\r\n * Parses a given value into a bool value.\r\n */\r\nexport function safeParseBool(value: any): boolean {\r\n    if (!value) {\r\n        return false;\r\n    }\r\n    if (typeChecker.ok(value, typeChecker.tyBool)) {\r\n        return value;\r\n    }\r\n    if (typeChecker.ok(value, typeChecker.tyString)) {\r\n        return value.toLowerCase() === 'true';\r\n    }\r\n    if (typeChecker.ok(value, typeChecker.tyNumber)) {\r\n        return value > 0;\r\n    }\r\n    return false;\r\n}\r\n\r\n/**\r\n * Returns if a given value can be safely converted into the given type.\r\n */\r\nexport function convertible(value: any, ty: typeChecker.ITypeDef): boolean {\r\n    if (typeChecker.ok(value, ty)) {\r\n        return true;\r\n    }\r\n\r\n    if (typeChecker.isNull(value) || typeChecker.isUndefined(value)) {\r\n        return false;\r\n    }\r\n\r\n    if (ty === typeChecker.tyNumber && isNaN(value)) {\r\n        return false;\r\n    }\r\n\r\n    // TODO: refine\r\n    return true;\r\n}\r\n\r\n/**\r\n * Safely converts the given value into a value of the given type.\r\n */\r\nexport function convert(value: any, ty: typeChecker.ITypeDef): any {\r\n    if (ty === typeChecker.tyNumber) {\r\n        return safeParseFloat(value);\r\n    }\r\n    if (ty === typeChecker.tyBool) {\r\n        return safeParseBool(value);\r\n    }\r\n    if (ty === typeChecker.tyString) {\r\n        return value.toString();\r\n    }\r\n\r\n    throw new Error('Cannot convert the given value to the given type');\r\n}\r\n","// \n// Author:: Tom Tang <principleware@gmail.com>\n// Copyright:: Copyright (c) 2017, Tom Tang\n// \n// Permission is hereby granted, free of charge, to any person obtaining\n// a copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to\n// permit persons to whom the Software is furnished to do so, subject to\n// the following conditions:\n// \n// The above copyright notice and this permission notice shall be\n// included in all copies or substantial portions of the Software.\n// \n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n// EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n// NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\n// LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n// OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\n// WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n// \n// Except as contained in this notice, the name(s) of the above copyright\n// holders shall not be used in advertising or otherwise to promote the\n// sale, use or other dealings in this Software without prior written\n// authorization.\n\nfunction asap(fn) {\n    setTimeout(fn, 1);\n}\n\nfunction bind(fn, thisArg) {\n    return function() {\n        fn.apply(thisArg, arguments);\n    };\n}\n\nvar isArray = Array.isArray || function(value) { return Object.prototype.toString.call(value) === \"[object Array]\"; };\n\n/**\n * Take a potentially misbehaving resolver function and make sure\n * onFulfilled and onRejected are only called once.\n *\n * Makes no guarantees about asynchrony.\n */\nfunction doResolve(fn, onFulfilled, onRejected) {\n    var done = false;\n    try {\n        fn(function(value) {\n            if (done) {\n                return;\n            }\n            done = true;\n            onFulfilled(value);\n        }, function(reason) {\n            if (done) {\n                return;\n            }\n            done = true;\n            onRejected(reason);\n        });\n    } catch (ex) {\n        if (done) {\n            return;\n        }\n        done = true;\n        onRejected(ex);\n    }\n}\n\nfunction handle(deferred) {\n    var me = this;\n    if (this._state === null) {\n        this._deferreds.push(deferred);\n        return;\n    }\n    asap(function() {\n        var cb, ret;\n        cb = me._state ? deferred.onFulfilled : deferred.onRejected;\n        if (cb === null) {\n            (me._state ? deferred.resolve : deferred.reject)(me._value);\n            return;\n        }\n        try {\n            ret = cb(me._value);\n        }\n        catch (e) {\n            deferred.reject(e);\n            return;\n        }\n        deferred.resolve(ret);\n    });\n}\n\n\nfunction finale() {\n    var i, len;\n    /*jslint plusplus:true */\n    for (i = 0, len = this._deferreds.length; i < len; i++) {\n        handle.call(this, this._deferreds[i]);\n    }\n    this._deferreds = null;\n}\n\nfunction reject(newValue) {\n    this._state = false;\n    this._value = newValue;\n    finale.call(this);\n}\n\nfunction resolve(newValue) {\n    try { //Promise Resolution Procedure: https://github.com/promises-aplus/promises-spec#the-promise-resolution-procedure\n        if (newValue === this) {\n            throw new TypeError('A promise cannot be resolved with itself.');\n        }\n        if (newValue && (typeof newValue === 'object' || typeof newValue === 'function')) {\n            var then = newValue.then;\n            if (typeof then === 'function') {\n                doResolve(bind(then, newValue), bind(resolve, this), bind(reject, this));\n                return;\n            }\n        }\n        this._state = true;\n        this._value = newValue;\n        finale.call(this);\n    } catch (e) { reject.call(this, e); }\n}\n\n/**\n * Defines a dummy promise, which simulates the behavior of a normal Promise\n * but is suitable used in synchronous call.\n * This resulted object is also a jQuery deferred object, therefore,\n * it will be resolved by the jQuery deferred object if it is a resolved value in\n * the jQuery deferred object.\n */\nexport function DummyPromise<T>(fn: (resolve: (value?: T | PromiseLike<T>) => void, reject: (reason?) => void) => void) {\n    if (typeof this !== 'object') {\n        throw new TypeError('Promises must be constructed via new');\n    }\n    if (typeof fn !== 'function') {\n        throw new TypeError('not a function');\n    }\n    this._state = null;\n    this._value = null;\n    this._deferreds = [];\n\n    doResolve(fn, bind(resolve, this), bind(reject, this));\n}\n\n\nfunction Handler(onFulfilled, onRejected, resolve, reject) {\n    this.onFulfilled = typeof onFulfilled === 'function' ? onFulfilled : null;\n    this.onRejected = typeof onRejected === 'function' ? onRejected : null;\n    this.resolve = resolve;\n    this.reject = reject;\n}\n\n\nDummyPromise.prototype['catch'] = function(onRejected) {\n    return this.then(null, onRejected);\n};\n\nDummyPromise.prototype.then = function(onFulfilled, onRejected) {\n    const me = this;\n    return new DummyPromise(function(resolve, reject) {\n        handle.call(me, new Handler(onFulfilled, onRejected, resolve, reject));\n    });\n};\n\nDummyPromise.prototype.all = function(arrayArg) {\n    var args = Array.prototype.slice.call(arguments.length === 1 && isArray(arrayArg) ? arrayArg : arguments);\n\n    return new DummyPromise(function(resolve, reject) {\n        if (args.length === 0) {\n            return resolve([]);\n        }\n        var remaining = args.length, i;\n        function res(i, val) {\n            try {\n                if (val && (typeof val === 'object' || typeof val === 'function')) {\n                    var then = val.then;\n                    if (typeof then === 'function') {\n                        then.call(val, function(val) { res(i, val); }, reject);\n                        return;\n                    }\n                }\n                args[i] = val;\n\n                /*jslint plusplus: true */\n                if (--remaining === 0) {\n                    resolve(args);\n                }\n            } catch (ex) {\n                reject(ex);\n            }\n        }\n        /*jslint plusplus: true */         for (i = 0; i < args.length; i++) {\n            res(i, args[i]);\n        }\n    });\n};\n\nDummyPromise.prototype.resolve = function(value) {\n    if (value && typeof value === 'object' && value.constructor === DummyPromise) {\n        return value;\n    }\n\n    return new DummyPromise(function(resolve) {\n        resolve(value);\n    });\n};\n\nDummyPromise.prototype.reject = function(value) {\n    /*jslint unparam: true */\n    return new DummyPromise(function(resolve, reject) {\n        reject(value);\n    });\n};\n\nDummyPromise.prototype.race = function(values) {\n    return new DummyPromise(function(resolve, reject) {\n        var i, len;\n        /*jslint plusplus: true */\n        for (i = 0, len = values.length; i < len; i++) {\n            values[i].then(resolve, reject);\n        }\n    });\n};\n\nDummyPromise.prototype.always = function(onFulfilled) {\n    return this.then(onFulfilled, onFulfilled);\n};\n\nDummyPromise.prototype.done = function(onFulfilled) {\n    return this.then(onFulfilled);\n};\n\nDummyPromise.prototype.fail = function(onRejected) {\n    return this.then(null, onRejected);\n};\n\nDummyPromise.prototype.promise = function() {\n    return this;\n};\n\nDummyPromise.prototype.progress = function() {\n    return this;\n};\n","/**\r\n * Replaces the placeholders a given format with the given parameters.\r\n */\r\nexport function replace(format: string, params: { [key: string]: any }): string {\r\n    /*jslint unparam: true */\r\n    return format.replace(/\\{([a-zA-Z]+)\\}/g, function(s, key) {\r\n        return (typeof params[key] === 'undefined') ? '' : params[key];\r\n    });\r\n}\r\n\r\n/**\r\n * Transforms the given string into one where\r\n * some characters have been properly replaced with\r\n * their escape versions.\r\n */\r\nexport function applyEscape(data: string): string {\r\n    data = data\r\n        .replace(/[\\\\]/g, '\\\\\\\\')\r\n        .replace(/[\\\"]/g, '\\\\\\\"')\r\n        .replace(/[\\/]/g, '\\\\/')\r\n        .replace(/[\\b]/g, '\\\\b')\r\n        .replace(/[\\f]/g, '\\\\f')\r\n        .replace(/[\\n]/g, '\\\\n')\r\n        .replace(/[\\r]/g, '\\\\r')\r\n        .replace(/[\\t]/g, '\\\\t');\r\n    return data;\r\n}\r\n\r\n/**\r\n * Undo the work by applyEscape. It replaces the escape\r\n * characters with their unescaped ones.\r\n */\r\nexport function reverseEscape(data: string): string {\r\n    data = data\r\n        .replace(/\\\\\\\\/g, '\\\\')\r\n        .replace(/\\\\\\\"/g, '\\\"')\r\n        .replace(/\\\\\\//g, '\\/')\r\n        .replace(/\\\\\\b/g, '\\b')\r\n        .replace(/\\\\\\f/g, '\\f')\r\n        .replace(/\\\\\\n/g, '\\n')\r\n        .replace(/\\\\\\r/g, '\\r')\r\n        .replace(/\\\\\\t/g, '\\t');\r\n    return data;\r\n}\r\n","// firstSet - secondSet (any element not in secondSet)\r\nexport function diff<T, U>(firstSet: Array<T>,\r\n    secondSet: Array<U>,\r\n    predicate: (firstElem: T, secondElem: U) => boolean): Array<T> {\r\n    return firstSet.filter((x: T) => {\r\n        return !secondSet.some((y: U) => {\r\n            return predicate(x, y);\r\n        });\r\n    });\r\n}\r\n\r\n// firstSet intersection secondSet\r\nexport function intersection<T, U>(firstSet: Array<T>,\r\n    secondSet: Array<U>,\r\n    predicate: (firstElem: T, secondElem: U) => boolean): Array<T> {\r\n    return firstSet.filter((x: T) => {\r\n        return secondSet.some((y: U) => {\r\n            return predicate(x, y);\r\n        });\r\n    });\r\n}\r\n","/**\r\n * Generates a guid.\r\n */\r\nexport function guid() {\r\n    let d = new Date().getTime();\r\n    const uuid = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {\r\n        const r = (d + Math.random() * 16) % 16 | 0;\r\n        d = Math.floor(d / 16);\r\n        return (c === 'x' ? r : (r & 0x7 | 0x8)).toString(16);\r\n    });\r\n    return uuid;\r\n}\r\n\r\n/**\r\n * Generates a random number between the given range\r\n */\r\nexport function getRandomInt(min, max) {\r\n    return Math.floor(Math.random() * (max - min + 1)) + min;\r\n}\r\n","// \r\n// Author:: Tom Tang <principleware@gmail.com>\r\n// Copyright:: Copyright (c) 2017, Tom Tang\r\n// \r\n// Permission is hereby granted, free of charge, to any person obtaining\r\n// a copy of this software and associated documentation files (the\r\n// \"Software\"), to deal in the Software without restriction, including\r\n// without limitation the rights to use, copy, modify, merge, publish,\r\n// distribute, sublicense, and/or sell copies of the Software, and to\r\n// permit persons to whom the Software is furnished to do so, subject to\r\n// the following conditions:\r\n// \r\n// The above copyright notice and this permission notice shall be\r\n// included in all copies or substantial portions of the Software.\r\n// \r\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\r\n// EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\r\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\r\n// NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\r\n// LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\r\n// OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\r\n// WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n// \r\n// Except as contained in this notice, the name(s) of the above copyright\r\n// holders shall not be used in advertising or otherwise to promote the\r\n// sale, use or other dealings in this Software without prior written\r\n// authorization.\r\n\r\n\r\nimport { DummyPromise } from './promise-like';\r\nimport * as typeChecker from '../typing/type-checker';\r\n\r\n/**\r\n * Lifts a single value or a function into a Promise-like object.\r\n * Provides a method of wrapping a single value or a function  into a Promise,\r\n * in order that the following operation \r\n * may conform to the standard Promise operation.\r\n * In some scenario, we may first attempt to get a value from cache.\r\n * Motivation.\r\n * In this case, we need to return a value. However, if the value is\r\n * not available in the cache, we may have to go ahead to load it\r\n * asynchronously. Loading a value asynchronously usually returns\r\n * a Promise. To untify the return from two cases, we\r\n * escalate a single value into a Promise.\r\n */\r\nexport function lift<T>(value: T, thisArg: Object): PromiseLike<T> {\r\n    /*jslint unparam: true */\r\n    return new DummyPromise(function(resolve, reject) {\r\n        if (typeChecker.isFunction(value)) {\r\n            const restArgs = [];\r\n            /*jslint plusplus: true */\r\n            for (let i = 2; i < arguments.length; i++) {\r\n                restArgs.push(arguments[i]);\r\n            }\r\n            const ret = value.apply(thisArg || null, restArgs);\r\n            resolve(ret);\r\n        } else {\r\n            resolve(value);\r\n        }\r\n    });\r\n}\r\n\r\n/**\r\n * Lifts a value into an rejected state.\r\n */\r\nexport function liftIntoReject<T>(value: T): PromiseLike<T> {\r\n    return new DummyPromise(function(resolve, reject) {\r\n        /*jslint unparam: true */\r\n        reject(value);\r\n    });\r\n}\r\n\r\n/**\r\n * Converts a given promise into another promise which ensures that\r\n * the given guard evalutes to be true from the state of the given promise.\r\n */\r\nexport function liftWithGuard<T>(promise: PromiseLike<T>, guard: (x: T) => boolean): PromiseLike<T> {\r\n    return promise.then(function(data) {\r\n        return new DummyPromise(function(resolve, reject) {\r\n            if (guard(data)) {\r\n                resolve(data);\r\n            } else {\r\n                reject(data);\r\n            }\r\n        });\r\n    });\r\n}\r\n\r\n/**\r\n * Settles a promise.\r\n */\r\nexport function settle<T>(promise: PromiseLike<T>): PromiseLike<T> {\r\n    return new DummyPromise(function(resolve) {\r\n        promise.then(function(value) {\r\n            resolve({\r\n                state: 'fulfilled',\r\n                data: value\r\n            });\r\n        }, function() {\r\n            resolve({\r\n                state: 'rejected'\r\n            });\r\n        });\r\n    });\r\n}\r\n\r\n/**\r\n * Converts the given promise into a promise which does not reject anything.\r\n */\r\nexport function liftToPredicate<T>(promise: PromiseLike<T>, guard: (x: T) => boolean): PromiseLike<boolean> {\r\n    return new DummyPromise(function(resolve, reject) {\r\n        /*jslint unparam: true */\r\n        promise.then(function(data) {\r\n            resolve(guard(data));\r\n        }, function() {\r\n            resolve(false);\r\n        });\r\n    });\r\n}\r\n\r\n\r\nexport interface IPipelineSettings<U> {\r\n    validator?: (x) => boolean,\r\n    adaptor: (x) => U\r\n}\r\n\r\n/**\r\n * Transforms a given promise with additonal pipeline processing.\r\n * Specifically, in this method, compared to the given promise, the return\r\n * promise contains validating and adpating stages.\r\n */\r\nexport function readerPipeline<T, U>(readerPromise: PromiseLike<T>, settings: IPipelineSettings<U>) {\r\n    return readerPromise\r\n        .then(function(data) {\r\n            if (settings.validator) {\r\n                if (!settings.validator(data)) {\r\n                    throw new Error('Data is not valid: ' + data);\r\n                }\r\n            }\r\n            return data;\r\n        })\r\n        .then(function(data) {\r\n            return settings.adaptor(data);\r\n        });\r\n}\r\n\r\n/**\r\n * Transforms a given promise into one promise with our own implementation.\r\n */\r\nexport function transform<T>(promise: PromiseLike<T>): PromiseLike<T> {\r\n    return new DummyPromise(function(resolve, reject) {\r\n        promise.then(resolve, reject);\r\n    });\r\n}\r\n","/**\r\n * Pushs an array or a single value into the thisArg;\r\n */\r\nexport function pushArray<T>(thisArg: Array<T>, src: Array<T> | T): void {\r\n    if (!(src instanceof Array)) {\r\n        thisArg.push(src);\r\n        return;\r\n    }\r\n\r\n    src.forEach(function(item) {\r\n        thisArg.push(item);\r\n    });\r\n}\r\n\r\n/**\r\n * Turns the values in an object into an array\r\n */\r\nexport function makeArray(o: Object) {\r\n    const ret = [];\r\n    for (let n in o) {\r\n        if (o.hasOwnProperty(n)) {\r\n            ret.push(o[n]);\r\n        }\r\n    }\r\n    return ret;\r\n}\r\n","/**\n * @fileOverview\n * Provides utilities for making interoperable the promise-like objects\n * from different modules.\n */\n/**\n * Extends a given promise into a deferred object of jQuery.\n * With this extension, we are able to chain together jQuery deferred\n * objects (which are also promise objects.)\n */\nexport function tojQueryDeferred(promise) {\n    if (!promise.always) {\n        promise.always = function(onFulfilled) {\n            return this.then(onFulfilled, onFulfilled);\n        };\n    }\n    if (!promise.done) {\n        promise.done = function(onFulfilled) {\n            return this.then(onFulfilled);\n        };\n    }\n    if (!promise.fail) {\n        promise.fail = function(onRejected) {\n            return this.then(null, onRejected);\n        };\n    }\n    if (!promise.progress) {\n        promise.progress = function() {\n            return this;\n        };\n    }\n    if (!promise.promise) {\n        promise.promise = function() {\n            return this;\n        };\n    }\n    return promise;\n}\n"]}